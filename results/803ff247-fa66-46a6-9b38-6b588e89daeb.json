{"result": "<output>\n<project_charter>\n# Charte de Projet\n\n## Informations générales\n- **Nom du projet :** Digitalisation de la Gestion Scolaire\n- **Client :** École La Grace Tsara\n- **Date de début prévue :** 10 Avril 2025\n- **Durée prévue :** 6 mois\n\n## Vision du projet\nModerniser la gestion scolaire de l'École La Grace Tsara en implémentant une solution numérique qui centralise la communication interne et automatise la gestion de la paie, permettant ainsi d'améliorer l'efficacité administrative et de réduire les erreurs.\n\n## Objectifs\n1. Centraliser les informations administratives et pédagogiques\n2. Faciliter la communication entre les différents acteurs (administration, enseignants, élèves/parents)\n3. Automatiser les processus de gestion de la paie\n4. Réduire le temps consacré aux tâches administratives répétitives\n5. Diminuer les erreurs liées à la gestion manuelle\n\n## Périmètre\n### Inclus\n- Module de communication interne (tableau de bord, messagerie, annonces, partage de documents, calendrier)\n- Module de gestion de la paie (saisie des données, calculs automatiques, génération des bulletins, historique)\n- Fonctionnalités transverses (authentification, interface multilingue, support mobile)\n- Formation des utilisateurs\n- Documentation technique\n\n### Exclus\n- Intégration avec des systèmes externes non mentionnés dans le cahier des charges\n- Développement d'applications mobiles natives (seule une interface responsive est prévue)\n- Gestion des inscriptions et admissions des élèves\n- Gestion des notes et bulletins scolaires (sauf partage via le module de communication)\n\n## Parties prenantes\n- Direction de l'école La Grace Tsara\n- Personnel administratif\n- Corps enseignant\n- Élèves et parents\n- Équipe de développement\n- Équipe de maintenance technique\n\n## Budget\n- Budget estimé : 8 à 10 millions d'Ariary\n- Coûts récurrents : Hébergement, maintenance, mises à jour\n\n## Jalons clés\n1. Lancement du projet (T0)\n2. Validation des spécifications détaillées (T0 + 1 mois)\n3. Développement du module de communication (T0 + 3 mois)\n4. Développement du module de paie (T0 + 5 mois)\n5. Tests et recette (T0 + 5,5 mois)\n6. Déploiement et formation (T0 + 6 mois)\n\n## Critères de succès\n1. Système opérationnel dans les délais prévus (6 mois)\n2. Respect du budget alloué\n3. Validation par les utilisateurs finaux\n4. Réduction mesurable du temps consacré aux tâches administratives\n5. Adoption du système par au moins 90% des utilisateurs cibles\n</project_charter>\n<product_backlog>\n# Backlog Produit\n\n## Épique 1: Système de base et authentification\n- **US1.1:** En tant qu'administrateur, je veux pouvoir créer différents types de comptes utilisateurs (admin, enseignant, élève/parent) afin de gérer les accès au système.\n- **US1.2:** En tant qu'utilisateur, je veux pouvoir me connecter avec un identifiant et un mot de passe sécurisés afin d'accéder à mon espace personnel.\n- **US1.3:** En tant qu'utilisateur, je veux pouvoir réinitialiser mon mot de passe en cas d'oubli afin de récupérer l'accès à mon compte.\n- **US1.4:** En tant qu'administrateur, je veux pouvoir gérer les droits d'accès des utilisateurs afin de contrôler les fonctionnalités disponibles pour chaque rôle.\n- **US1.5:** En tant qu'utilisateur, je veux pouvoir choisir la langue de l'interface (Français ou Malagasy) afin d'utiliser l'application dans ma langue préférée.\n\n## Épique 2: Tableau de bord et interface utilisateur\n- **US2.1:** En tant qu'utilisateur, je veux avoir un tableau de bord personnalisé selon mon rôle afin d'accéder rapidement aux informations pertinentes.\n- **US2.2:** En tant qu'administrateur, je veux pouvoir personnaliser les éléments visibles sur les tableaux de bord des différents types d'utilisateurs afin d'adapter l'expérience utilisateur.\n- **US2.3:** En tant qu'utilisateur, je veux pouvoir accéder à l'application depuis un appareil mobile afin de consulter les informations en déplacement.\n- **US2.4:** En tant qu'utilisateur, je veux pouvoir personnaliser certains aspects de mon interface afin d'améliorer mon expérience d'utilisation.\n\n## Épique 3: Module de communication interne\n- **US3.1:** En tant qu'utilisateur, je veux pouvoir envoyer et recevoir des messages instantanés afin de communiquer efficacement avec les autres utilisateurs.\n- **US3.2:** En tant qu'administrateur/enseignant, je veux pouvoir créer et publier des annonces afin d'informer les utilisateurs concernés.\n- **US3.3:** En tant qu'utilisateur, je veux recevoir des notifications (email/SMS) pour les nouvelles annonces importantes afin de rester informé.\n- **US3.4:** En tant qu'utilisateur, je veux pouvoir consulter l'historique des messages et annonces afin de retrouver des informations passées.\n- **US3.5:** En tant qu'administrateur/enseignant, je veux pouvoir partager des documents avec des groupes spécifiques d'utilisateurs afin de diffuser des informations ciblées.\n- **US3.6:** En tant qu'utilisateur, je veux pouvoir télécharger les documents partagés afin de les consulter hors ligne.\n\n## Épique 4: Calendrier scolaire\n- **US4.1:** En tant qu'administrateur, je veux pouvoir créer et gérer un calendrier scolaire afin de planifier les événements de l'année.\n- **US4.2:** En tant qu'enseignant, je veux pouvoir ajouter des événements spécifiques à mes classes afin d'informer les élèves et parents.\n- **US4.3:** En tant qu'utilisateur, je veux pouvoir consulter le calendrier scolaire afin de connaître les dates importantes.\n- **US4.4:** En tant qu'utilisateur, je veux recevoir des rappels pour les événements à venir afin de ne pas les oublier.\n- **US4.5:** En tant qu'administrateur, je veux pouvoir définir des périodes de vacances scolaires afin qu'elles soient visibles par tous les utilisateurs.\n\n## Épique 5: Gestion de la paie\n- **US5.1:** En tant qu'administrateur, je veux pouvoir configurer les paramètres de paie (taux horaires, cotisations, etc.) afin de préparer les calculs automatiques.\n- **US5.2:** En tant qu'administrateur/enseignant, je veux pouvoir saisir les heures travaillées, congés et absences afin de préparer les fiches de paie.\n- **US5.3:** En tant qu'administrateur, je veux que le système calcule automatiquement les salaires (bruts, nets, cotisations) afin d'éviter les erreurs manuelles.\n- **US5.4:** En tant qu'administrateur, je veux pouvoir générer des bulletins de paie en format PDF afin de les distribuer aux employés.\n- **US5.5:** En tant qu'enseignant, je veux pouvoir consulter l'historique de mes fiches de paie afin de suivre l'évolution de mon salaire.\n- **US5.6:** En tant qu'administrateur, je veux recevoir des alertes pour les échéances de paiement afin de respecter les délais légaux.\n- **US5.7:** En tant qu'administrateur, je veux pouvoir exporter les données de paie pour la comptabilité afin de faciliter la gestion financière.\n\n## Épique 6: Sécurité et conformité\n- **US6.1:** En tant qu'administrateur, je veux que les données sensibles soient chiffrées afin de garantir leur confidentialité.\n- **US6.2:** En tant qu'administrateur, je veux avoir une traçabilité des accès et modifications afin de contrôler l'utilisation du système.\n- **US6.3:** En tant qu'administrateur, je veux pouvoir effectuer des sauvegardes régulières afin de prévenir la perte de données.\n- **US6.4:** En tant qu'utilisateur, je veux que ma session expire après une période d'inactivité afin de protéger mes données.\n\n## Épique 7: Documentation et formation\n- **US7.1:** En tant qu'utilisateur, je veux avoir accès à des tutoriels vidéo afin d'apprendre à utiliser le système.\n- **US7.2:** En tant qu'administrateur, je veux disposer d'une documentation technique complète afin de pouvoir maintenir le système.\n- **US7.3:** En tant qu'utilisateur, je veux avoir accès à une aide contextuelle afin de résoudre rapidement mes problèmes d'utilisation.\n- **US7.4:** En tant qu'administrateur, je veux pouvoir organiser des sessions de formation en présentiel afin de former les utilisateurs.\n</product_backlog>\n<effort_estimation>\n# Estimation de l'Effort\n\n## Méthode d'estimation\nPour ce projet, nous utilisons une combinaison de points de complexité (story points) selon l'échelle de Fibonacci (1, 2, 3, 5, 8, 13, 21) et d'estimations en jours-hommes. Chaque story point représente approximativement 1 jour-homme de travail.\n\n## Estimation par épique\n\n### Épique 1: Système de base et authentification\n| User Story | Complexité (SP) | Effort (jours-hommes) |\n|------------|-----------------|------------------------|\n| US1.1      | 5               | 5                      |\n| US1.2      | 5               | 5                      |\n| US1.3      | 3               | 3                      |\n| US1.4      | 5               | 5                      |\n| US1.5      | 3               | 3                      |\n| **Total**  | **21**          | **21**                 |\n\n### Épique 2: Tableau de bord et interface utilisateur\n| User Story | Complexité (SP) | Effort (jours-hommes) |\n|------------|-----------------|------------------------|\n| US2.1      | 8               | 8                      |\n| US2.2      | 5               | 5                      |\n| US2.3      | 8               | 8                      |\n| US2.4      | 5               | 5                      |\n| **Total**  | **26**          | **26**                 |\n\n### Épique 3: Module de communication interne\n| User Story | Complexité (SP) | Effort (jours-hommes) |\n|------------|-----------------|------------------------|\n| US3.1      | 8               | 8                      |\n| US3.2      | 5               | 5                      |\n| US3.3      | 5               | 5                      |\n| US3.4      | 3               | 3                      |\n| US3.5      | 5               | 5                      |\n| US3.6      | 2               | 2                      |\n| **Total**  | **28**          | **28**                 |\n\n### Épique 4: Calendrier scolaire\n| User Story | Complexité (SP) | Effort (jours-hommes) |\n|------------|-----------------|------------------------|\n| US4.1      | 5               | 5                      |\n| US4.2      | 3               | 3                      |\n| US4.3      | 3               | 3                      |\n| US4.4      | 5               | 5                      |\n| US4.5      | 3               | 3                      |\n| **Total**  | **19**          | **19**                 |\n\n### Épique 5: Gestion de la paie\n| User Story | Complexité (SP) | Effort (jours-hommes) |\n|------------|-----------------|------------------------|\n| US5.1      | 8               | 8                      |\n| US5.2      | 5               | 5                      |\n| US5.3      | 13              | 13                     |\n| US5.4      | 5               | 5                      |\n| US5.5      | 3               | 3                      |\n| US5.6      | 5               | 5                      |\n| US5.7      | 5               | 5                      |\n| **Total**  | **44**          | **44**                 |\n\n### Épique 6: Sécurité et conformité\n| User Story | Complexité (SP) | Effort (jours-hommes) |\n|------------|-----------------|------------------------|\n| US6.1      | 8               | 8                      |\n| US6.2      | 5               | 5                      |\n| US6.3      | 5               | 5                      |\n| US6.4      | 3               | 3                      |\n| **Total**  | **21**          | **21**                 |\n\n### Épique 7: Documentation et formation\n| User Story | Complexité (SP) | Effort (jours-hommes) |\n|------------|-----------------|------------------------|\n| US7.1      | 8               | 8                      |\n| US7.2      | 5               | 5                      |\n| US7.3      | 5               | 5                      |\n| US7.4      | 3               | 3                      |\n| **Total**  | **21**          | **21**                 |\n\n## Récapitulatif\n\n| Épique                                    | Effort total (jours-hommes) |\n|-------------------------------------------|------------------------------|\n| Épique 1: Système de base et authentification | 21                       |\n| Épique 2: Tableau de bord et interface utilisateur | 26                 |\n| Épique 3: Module de communication interne | 28                           |\n| Épique 4: Calendrier scolaire             | 19                           |\n| Épique 5: Gestion de la paie              | 44                           |\n| Épique 6: Sécurité et conformité          | 21                           |\n| Épique 7: Documentation et formation      | 21                           |\n| **Total**                                 | **180**                      |\n\n## Répartition des ressources\n- 1 Chef de projet (50% du temps)\n- 2 Développeurs full-stack (100% du temps)\n- 1 Designer UI/UX (50% du temps)\n- 1 Testeur QA (50% du temps)\n\n## Durée estimée\nAvec cette équipe, et en considérant les dépendances entre les tâches, nous estimons que le projet peut être réalisé en 6 mois (environ 120 jours ouvrables), ce qui correspond à la contrainte temporelle définie dans le cahier des charges.\n</effort_estimation>\n<roadmap>\n# Roadmap\n\n## Phase 1: Initialisation et conception (Mois 1)\n- **Semaine 1-2:**\n  - Analyse détaillée des besoins\n  - Définition de l'architecture technique\n  - Mise en place de l'environnement de développement\n  - Conception de la base de données\n\n- **Semaine 3-4:**\n  - Conception des maquettes UI/UX\n  - Validation des maquettes avec le client\n  - Planification détaillée des sprints\n  - Préparation des environnements de développement et de test\n\n## Phase 2: Développement du socle et du module de communication (Mois 2-3)\n- **Mois 2:**\n  - Développement du système d'authentification (Épique 1)\n  - Développement du tableau de bord de base (Épique 2)\n  - Premier jalon: Validation du système d'authentification et de l'interface de base\n\n- **Mois 3:**\n  - Développement du module de messagerie instantanée (Épique 3)\n  - Développement du système de gestion des annonces (Épique 3)\n  - Développement du système de partage de documents (Épique 3)\n  - Deuxième jalon: Validation du module de communication interne\n\n## Phase 3: Développement du calendrier et du module de paie (Mois 4-5)\n- **Mois 4:**\n  - Développement du calendrier scolaire (Épique 4)\n  - Début du développement du module de gestion de la paie (Épique 5)\n  - Troisième jalon: Validation du calendrier scolaire\n\n- **Mois 5:**\n  - Finalisation du module de gestion de la paie (Épique 5)\n  - Implémentation des fonctionnalités de sécurité et conformité (Épique 6)\n  - Quatrième jalon: Validation du module de paie\n\n## Phase 4: Finalisation, tests et déploiement (Mois 6)\n- **Semaine 1-2:**\n  - Tests d'intégration complets\n  - Correction des bugs identifiés\n  - Préparation de la documentation technique (Épique 7)\n  - Création des tutoriels vidéo (Épique 7)\n\n- **Semaine 3-4:**\n  - Tests utilisateurs avec le client\n  - Sessions de formation des utilisateurs\n  - Déploiement en production\n  - Cinquième jalon: Livraison finale du projet\n\n## Jalons clés\n1. **Jalon 1 (Fin du mois 1):** Validation de la conception et des maquettes\n2. **Jalon 2 (Fin du mois 3):** Module de communication interne opérationnel\n3. **Jalon 3 (Mi-mois 4):** Calendrier scolaire opérationnel\n4. **Jalon 4 (Fin du mois 5):** Module de paie opérationnel\n5. **Jalon 5 (Fin du mois 6):** Livraison finale du système\n\n## Dépendances critiques\n- Le développement des modules spécifiques (communication, calendrier, paie) dépend de la finalisation du système d'authentification et des tableaux de bord\n- La formation des utilisateurs dépend de la finalisation des fonctionnalités et de la documentation\n- Le déploiement final dépend de la validation des tests utilisateurs\n</roadmap>\n<methodology>\n# Méthodologie\n\n## Approche Agile - Scrum\nPour ce projet de digitalisation de la gestion scolaire de l'École La Grace Tsara, nous adopterons une méthodologie Agile basée sur le framework Scrum, adaptée aux contraintes et à la taille du projet.\n\n### Organisation de l'équipe\n- **Product Owner :** Représentant de l'École La Grace Tsara, responsable de la priorisation des fonctionnalités\n- **Scrum Master :** Chef de projet, facilitateur et garant de l'application de la méthodologie\n- **Équipe de développement :** 2 développeurs full-stack, 1 designer UI/UX, 1 testeur QA\n\n### Cycles de développement\n- **Durée des sprints :** 2 semaines\n- **Nombre total de sprints :** 12 sprints sur 6 mois\n\n### Cérémonies Scrum\n1. **Sprint Planning :**\n   - Fréquence : Au début de chaque sprint\n   - Durée : 2 heures\n   - Objectif : Sélectionner les user stories à développer pendant le sprint et planifier leur réalisation\n\n2. **Daily Stand-up :**\n   - Fréquence : Quotidienne\n   - Durée : 15 minutes\n   - Objectif : Synchronisation de l'équipe, identification des blocages\n\n3. **Sprint Review :**\n   - Fréquence : Fin de chaque sprint\n   - Durée : 1 heure\n   - Objectif : Démonstration des fonctionnalités développées au Product Owner et aux parties prenantes\n\n4. **Sprint Retrospective :**\n   - Fréquence : Fin de chaque sprint\n   - Durée : 1 heure\n   - Objectif : Amélioration continue du processus de développement\n\n5. **Backlog Refinement :**\n   - Fréquence : Hebdomadaire\n   - Durée : 1 heure\n   - Objectif : Clarification et estimation des user stories à venir\n\n### Outils de gestion de projet\n- **Gestion du backlog et des sprints :** Jira ou Trello\n- **Documentation collaborative :** Confluence ou Google Docs\n- **Gestion du code source :** Git avec GitHub ou GitLab\n- **Communication d'équipe :** Slack ou Microsoft Teams\n- **Intégration continue :** Jenkins ou GitHub Actions\n\n### Pratiques de développement\n1. **Développement piloté par les tests (TDD) :**\n   - Écriture des tests avant le code\n   - Couverture de tests minimale de 80%\n\n2. **Revue de code :**\n   - Toutes les modifications doivent être revues par au moins un autre développeur\n   - Utilisation de pull/merge requests\n\n3. **Intégration continue :**\n   - Intégration quotidienne du code\n   - Tests automatisés à chaque intégration\n\n4. **Livraison continue :**\n   - Déploiement automatisé sur l'environnement de test à chaque fin de sprint\n   - Démonstration sur l'environnement de test lors des sprint reviews\n\n### Implication du client\n- Participation du Product Owner aux cérémonies Scrum\n- Validation des livrables à la fin de chaque sprint\n- Sessions de feedback utilisateurs organisées tous les 2 sprints\n- Points d'étape formels à chaque jalon majeur du projet\n\n### Documentation\n- Documentation technique mise à jour en continu\n- Documentation utilisateur développée en parallèle des fonctionnalités\n- Tutoriels vidéo créés après la stabilisation des fonctionnalités\n</methodology>\n<risk_management>\n# Gestion des Risques\n\n## Matrice d'évaluation des risques\nÉchelle de probabilité : Faible (1) - Moyenne (2) - Élevée (3)\nÉchelle d'impact : Faible (1) - Moyen (2) - Élevé (3)\nScore de risque = Probabilité × Impact\n\n## Risques identifiés\n\n### 1. Risques techniques\n\n#### RT-01: Problèmes d'intégration entre les modules\n- **Probabilité :** 2 (Moyenne)\n- **Impact :** 3 (Élevé)\n- **Score :** 6\n- **Stratégie :** Mitigation\n- **Actions préventives :**\n  - Définir des interfaces claires entre les modules dès la phase de conception\n  - Mettre en place des tests d'intégration automatisés\n  - Adopter une approche d'intégration continue\n- **Plan de contingence :**\n  - Prévoir des sprints dédiés à la résolution des problèmes d'intégration\n  - Constituer une équipe transverse pour résoudre les problèmes rapidement\n\n#### RT-02: Performance insuffisante du système\n- **Probabilité :** 2 (Moyenne)\n- **Impact :** 2 (Moyen)\n- **Score :** 4\n- **Stratégie :** Mitigation\n- **Actions préventives :**\n  - Effectuer des tests de charge dès les premières versions\n  - Optimiser la structure de la base de données\n  - Mettre en place un monitoring des performances\n- **Plan de contingence :**\n  - Prévoir des ressources pour l'optimisation des performances\n  - Envisager un scaling horizontal ou vertical de l'infrastructure\n\n#### RT-03: Vulnérabilités de sécurité\n- **Probabilité :** 1 (Faible)\n- **Impact :** 3 (Élevé)\n- **Score :** 3\n- **Stratégie :** Prévention\n- **Actions préventives :**\n  - Suivre les bonnes pratiques de sécurité (OWASP)\n  - Réaliser des audits de sécurité réguliers\n  - Former l'équipe aux enjeux de sécurité\n- **Plan de contingence :**\n  - Prévoir une procédure de correction rapide des failles\n  - Disposer d'un plan de communication en cas de faille\n\n### 2. Risques organisationnels\n\n#### RO-01: Indisponibilité des parties prenantes clés\n- **Probabilité :** 2 (Moyenne)\n- **Impact :** 2 (Moyen)\n- **Score :** 4\n- **Stratégie :** Mitigation\n- **Actions préventives :**\n  - Identifier des suppléants pour chaque rôle clé\n  - Planifier les réunions importantes à l'avance\n  - Documenter les décisions et les exigences\n- **Plan de contingence :**\n  - Prévoir des mécanismes de validation asynchrones\n  - Ajuster le planning pour s'adapter aux disponibilités\n\n#### RO-02: Turnover dans l'équipe de développement\n- **Probabilité :** 1 (Faible)\n- **Impact :** 2 (Moyen)\n- **Score :** 2\n- **Stratégie :** Mitigation\n- **Actions préventives :**\n  - Assurer une documentation adéquate du code et des processus\n  - Favoriser le partage de connaissances au sein de l'équipe\n  - Mettre en place des pratiques de développement en binôme\n- **Plan de contingence :**\n  - Prévoir des procédures d'onboarding efficaces\n  - Maintenir une base de connaissances à jour\n\n### 3. Risques de projet\n\n#### RP-01: Dépassement du budget\n- **Probabilité :** 2 (Moyenne)\n- **Impact :** 3 (Élevé)\n- **Score :** 6\n- **Stratégie :** Mitigation\n- **Actions préventives :**\n  - Établir un budget détaillé avec des marges\n  - Suivre régulièrement les dépenses\n  - Prioriser les fonctionnalités selon leur valeur ajoutée\n- **Plan de contingence :**\n  - Identifier les fonctionnalités qui pourraient être reportées\n  - Prévoir des options de financement complémentaires\n\n#### RP-02: Non-respect des délais\n- **Probabilité :** 2 (Moyenne)\n- **Impact :** 3 (Élevé)\n- **Score :** 6\n- **Stratégie :** Mitigation\n- **Actions préventives :**\n  - Planifier avec des marges\n  - Suivre l'avancement via des métriques (vélocité, burndown)\n  - Identifier et résoudre rapidement les blocages\n- **Plan de contingence :**\n  - Prévoir une priorisation des fonctionnalités essentielles\n  - Envisager des ressources supplémentaires temporaires\n\n#### RP-03: Évolution des besoins en cours de projet\n- **Probabilité :** 3 (Élevée)\n- **Impact :** 2 (Moyen)\n- **Score :** 6\n- **Stratégie :** Acceptation contrôlée\n- **Actions préventives :**\n  - Valider régulièrement les développements avec les utilisateurs\n  - Mettre en place un processus de gestion des changements\n  - Utiliser des techniques de prototypage\n- **Plan de contingence :**\n  - Évaluer l'impact des changements sur le planning et le budget\n  - Négocier des ajustements de périmètre ou de délai si nécessaire\n\n### 4. Risques externes\n\n#### RE-01: Problèmes techniques liés à l'infrastructure d'hébergement\n- **Probabilité :** 1 (Faible)\n- **Impact :** 3 (Élevé)\n- **Score :** 3\n- **Stratégie :** Transfert et mitigation\n- **Actions préventives :**\n  - Choisir un fournisseur d'hébergement fiable avec SLA\n  - Prévoir des mécanismes de sauvegarde et de reprise\n- **Plan de contingence :**\n  - Disposer d'une solution de repli (hébergement alternatif)\n  - Prévoir des procédures de restauration testées\n\n#### RE-02: Contraintes réglementaires nouvelles\n- **Probabilité :** 1 (Faible)\n- **Impact :** 2 (Moyen)\n- **Score :** 2\n- **Stratégie :** Surveillance\n- **Actions préventives :**\n  - Veille réglementaire\n  - Conception modulaire facilitant les adaptations\n- **Plan de contingence :**\n  - Prévoir du temps et des ressources pour les adaptations nécessaires\n\n## Suivi et contrôle des risques\n- Revue des risques lors de chaque réunion de sprint planning\n- Mise à jour du registre des risques à la fin de chaque sprint\n- Rapport mensuel sur l'évolution des risques principaux\n- Escalade immédiate des risques dont le score dépasse 6\n\n## Responsabilités\n- Le chef de projet est responsable de la gestion globale des risques\n- Chaque risque identifié est assigné à un propriétaire spécifique\n- L'équipe entière participe à l'identification et à l'évaluation des risques\n</risk_management>\n</output>"}